/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package model;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;
import org.hibernate.annotations.Cascade;

/**
 *
 * @author Camila.Riveron
 */
@Entity
@Table(name = "perfiles")
@NamedQueries({
    @NamedQuery(name = "Perfiles.findAll", query = "SELECT p FROM Perfiles p")})
public class Perfiles implements Serializable {
    private static final long serialVersionUID = 1L;
    
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Basic(optional = false)
    @Column(name = "id")
    private Integer id;
    
    @Column(name = "nombre")
    private String nombre;
    @Cascade(org.hibernate.annotations.CascadeType.DELETE_ORPHAN)
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "perfilId", fetch = FetchType.LAZY)
    private List<PerfilesCapas> perfilesCapasList;

    
    
    public Perfiles() {
        perfilesCapasList= new ArrayList();
    }

    public Perfiles(Integer id) {
        this.id = id;       
        perfilesCapasList= new ArrayList();
    }
    
    public Integer getId() {
        return id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public String getNombre() {
        return nombre;
    }

    public void setNombre(String nombre) {
        this.nombre = nombre;
    }

    public List<PerfilesCapas> getPerfilesCapasList() {
        return perfilesCapasList;
    }

    public void setPerfilesCapasList(List<PerfilesCapas> perfilesCapasList) {
        this.perfilesCapasList = perfilesCapasList;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (id != null ? id.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof Perfiles)) {
            return false;
        }
        Perfiles other = (Perfiles) object;
        if ((this.id == null && other.id != null) || (this.id != null && !this.id.equals(other.id))) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "model.Perfiles[ id=" + id + " ]";
    }

    public void agregarCapa(PerfilesCapas perfilCapa) {
        this.perfilesCapasList.add(perfilCapa);
    }
    
    public void quitarCapa(PerfilesCapas perfilCapa) {
        this.perfilesCapasList.remove(perfilCapa);
    }
    
    /**
     * Se utiliza para no mostrar los botones de edicion y eliminacion en la 
     * p√°gina, para el perfil Default
     * @return 
     */
    public boolean getEsDefault(){
        System.out.println("<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< es defaultttt");
        return nombre.equals("Default");
    }
    
    public void setEsDefault(){
        
    }

    
    
    
}
